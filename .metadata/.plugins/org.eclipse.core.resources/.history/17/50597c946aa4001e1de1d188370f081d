package collections;

import java.util.Hashtable;

public class HashMaps {

	public static void main(String[] args) {
		
		Hashtable hashtable=new Hashtable();
		
		hashtable.put(new HashTableDemo(5), "A");
		hashtable.put(new HashTableDemo(2), "B");
		hashtable.put(new HashTableDemo(6), "X");
		hashtable.put(new HashTableDemo(8), "S");
		hashtable.put(new HashTableDemo(1), "C");
		
		System.out.println(hashtable.size());
		System.out.println(hashtable);
	}

}

/*
 * 	Map Interface :
 * 		If we want to represent group of objects as key-value pairs.
 * 		No duplicate keys , but values can be duplicate.
 * 		Each key-value pair is one entry.
 * 		Map interface is not child interface of Collection and hence we can't apply Collection interface methods here.
 *  
 *	HashMap : 
 *		Underlying data structure is Hashtable.
 *		Stores in pairs of key-values.
 *		Duplicates keys not allowed.
 * 		Insertion order is not preserved , it is based on Hash Keys.
 *		null key not allowed.
 *		Every method present inside Hashtable is synchronized and hence Hashtable is thread safe. 
 * 		
 * 	HashTable :
 * 		Same properties as above for HashMap.
 * 		Heterogeneous objects are allowed both keys and values.
 * 		
 * 
 * 
 * 
 * 
 * 
 */
